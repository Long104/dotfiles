# source-file ~/.config/tmux/tmux.reset.conf
unbind r
# ==========================
# ========================== ===  General settings  ===
# ==========================
# set -g status-left ''
# set -g status-right ''
set -s escape-time 0
set -g focus-events on
set -g mouse on
set -g status-interval 5
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g aggressive-resize on
set-option -g history-limit 20000 # set -sg escape-time 0
set -as terminal-features ",xterm-256color:RGB"
set -g allow-passthrough all
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
set -gq allow-passthrough on
set -g visual-activity on
set-option -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1
set -s set-clipboard on
# Set default terminal type based on the current terminal environment
set -g default-terminal "${TERM}"
set -g default-terminal "screen-256color"
# Enable undercurl support in tmux
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# Enable colored undercurls in tmux (requires tmux 3.0 or later)
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
setw -g mode-keys vi
set -g detach-on-destroy off  # don't exit from tmux when closing a session
set -g status-position top 
# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-a


# ==========================
# ===  key binding  ===
# ==========================
bind R source-file ~/.tmux.conf

# ===  select window  ===

# bind -n M-1 select-window -t 1 
# bind -n M-2 select-window -t 2
# bind -n M-3 select-window -t 3
# bind -n M-4 select-window -t 4
# bind -n M-5 select-window -t 5
# bind -n M-6 select-window -t 6
# bind -n M-7 select-window -t 7
# bind -n M-8 select-window -t 8


bind -n M-1 if-shell 'tmux list-windows | grep -q "^1:"' \
    "select-window -t 1" \
    "new-window"

bind -n M-2 if-shell 'tmux list-windows | grep -q "^2:"' \
    "select-window -t 2" \
    "new-window"

bind -n M-3 if-shell 'tmux list-windows | grep -q "^3:"' \
    "select-window -t 3" \
    "new-window"

bind -n M-4 if-shell 'tmux list-windows | grep -q "^4:"' \
    "select-window -t 4" \
    "new-window"

bind -n M-5 if-shell 'tmux list-windows | grep -q "^5:"' \
    "select-window -t 5" \
    "new-window"

bind -n M-6 if-shell 'tmux list-windows | grep -q "^6:"' \
    "select-window -t 6" \
    "new-window"

bind -n M-7 if-shell 'tmux list-windows | grep -q "^7:"' \
    "select-window -t 7" \
    "new-window"

bind -n M-8 if-shell 'tmux list-windows | grep -q "^8:"' \
    "select-window -t 8" \
    "new-window"


bind -n "M-\\" last-window

# ===  select pane  ===

bind -r "\\" select-pane -l 
# bind -n "C-\\" select-pane -l 
# lastest window
# bind -n M-i last-window
# bind -n BTab last-window
# Shift arrow to switch windows
# bind-key -n C-Tab next-window
# bind-key -n BTab previous-window
# split
unbind %
bind i split-window -h
unbind '"'
bind u split-window -v

# ===  select session  ===

bind-key -n C-Space if-shell -F '#{==:#{session_name},ollama}' {
    detach-client
} {
    # new-window -d -n ollama-serve "ollama serve"
    # Create or attach to the ollama-serve session (switches to it temporarily)
    new-session -A -s ollama-serve -n ollama-serve "ollama serve"
    
    # Switch back to the previous session
    switch-client -l
    
    # Display the popup in the original session
    display-popup -h 70% -w 65% -E "tmux new-session -A -s ollama ollama run qwen2.5-coder:0.5b"
}

# bind-key -n M-u if-shell -F '#{==:#{session_name},scratch}' {
# detach-client
# } {
# display-popup -h 70% -w 65% -E "tmux new-session -A -s scratch"
# }

bind-key -n M-u if-shell -F '#{==:#{session_name},scratch}' {
detach-client
} {
display-popup -h 70% -w 65% -E "tmux new-session -A -s scratch"
}

bind-key -n M-d detach-client

bind -n  M-g run-shell "tmux new-window -n 'lazygit' -c '#{pane_current_path}' 'lazygit'"

# bind -n M-g if-shell "tmux list-windows -F '#{window_name}' | grep -q '^lazygit$'" \
#     "select-window -t lazygit" \
#     "new-window -n lazygit -c '#{pane_current_path}' 'lazygit'"
# bind -n M-g run-shell 'tmux list-windows -F "#{window_name}" | grep -Fxq "lazygit" && tmux select-window -t lazygit || tmux new-window -n lazygit -c "#{pane_current_path}" "lazygit"'


# bind -n  M-9 run-shell "tmux new-window -n 'k9s' -c '#{pane_current_path}' 'k9s'"
# bind -n  M-D run-shell "tmux new-window -n 'lazydocker' -c '#{pane_current_path}' 'lazydocker'"

# bind -n M-D run-shell "tmux switch-client -t lazydocker || tmux new-session -ds lazydocker -n lazydocker 'lazydocker' && tmux switch-client -t lazydocker"
# bind -n M-9 run-shell "tmux switch-client -t k9s || tmux new-session -ds k9s -n k9s 'k9s' && tmux switch-client -t k9s"

# bind-key z display-popup -y 45 -h 90% -w 95% -E "tmux new-session -A -s 'yazi' -n yazi 'yazi' "
# 'display-popup -y 45 -h 90% -w 95% -E "tmux new-session -A -s avante -n avante nvim -c 'AvanteAsk'"'


bind-key -n M-z if-shell -F '#{==:#{session_name},yazi}' {
    # switch-client -t yazi
    detach-client
  } {
    display-popup -y 45 -h 90% -w 95% -E "tmux new-session -A -s yazi -n yazi yazi"
    }


bind-key -n M-i if-shell -F '#{==:#{session_name},posting}' {
    # switch-client -t posting
    detach-client
  }{
    display-popup -y 45 -h 90% -w 95% -E "tmux new-session -A -s posting -n posting posting"
    }

bind-key -n M-9 if-shell '#{==:#{session_name},k9s}' {
    # switch-client -t k9s
    detach-client
  }{
  display-popup -y 45 -h 90% -w 95% -E "tmux new-session -A -s k9s -n k9s k9s"
    }

bind-key -n M-D if-shell -F '#{==:#{session_name},lazydocker}' {
    # switch-client -t lazydocker
    detach-client
  }{
    display-popup -y 45 -h 90% -w 95% -E "tmux new-session -A -s lazydocker -n lazydocker lazydocker"
    }

# bind-key -n M-g display-popup -y 45 -h 90% -w 95% -E "tmux new-session -s lazygit -n lazygit -c '#{pane_current_path}' lazygit"


# bind-key "O" run-shell "sesh connect \"$(
# 	sesh list | fzf-tmux -p 55%,60% \
# 		--no-sort --border-label ' sesh ' --prompt '‚ö°  ' \
# 		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
# 		--bind 'tab:down,btab:up' \
# 		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
# 		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
# 		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
# 		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
# 		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
# 		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
# )\""

bind-key "K" display-popup -E -w 40% "sesh connect \"$(
	sesh list -i | gum filter --limit 1 --placeholder 'Pick a sesh' --height 50 --prompt='‚ö°'
)\""
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
# resize
bind-key j resize-pane -D 5
bind-key k resize-pane -U 5
bind-key l resize-pane -R 5
bind-key h resize-pane -L 5
bind-key m resize-pane -Z 5
bind-key -T copy-mode-vi "v" send -X begin-selection # begin selection
bind-key -T copy-mode-vi "y" send -X copy-selection # copy selection to clipboard
unbind -T copy-mode-vi MouseDragEnd1Pane

bind-key | select-layout even-horizontal
bind-key - select-layout even-vertical


# ==========================
# ===  plugin config  ===
# ==========================


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'


# set -g status-position top
# set -g status off

# List of plugins
set -g @plugin 'omerxx/tmux-floax'
set -g @plugin 'christoomey/vim-tmux-navigator' # vim keybindings
set -g @plugin 'tmux-plugins/tmux-resurrect' # save tmux env
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'catppuccin/tmux'


# ==========================
# ========================== ===  # catppuccin-tmux configuration
# ==========================
# set -g @catppuccin_flavour 'mocha'
# set -ogq @catppuccin_window_status_style "rounded" # basic, rounded, slanted, custom, or none
# set -g @catppuccin_window_middle_separator " ÓÇ∂"
# set -g @catppuccin_window_left_separator "ÓÇ∂"
# set -g @catppuccin_window_right_separator "ÓÇ¥¬†"
# set -g @catppuccin_window_number_position "right" 
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_default_text "#W"
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(ÓÆÅ),}"
# # set -g @catppuccin_status_modules_right "directory meetings date_time"
# # set -g @catppuccin_status_modules_right "session application directory user host date_time"
# set -g @catppuccin_status_modules_right "application directory date_time"
# set -g @catppuccin_status_modules_left "session"
# set -g @catppuccin_status_left_separator  " ÓÇ∂"
# set -g @catppuccin_status_right_separator "ÓÇ¥ "
# set -g @catppuccin_status_right_separator_inverse "no"
# set -g @catppuccin_status_fill "icon"
# set -g @catppuccin_status_connect_separator "no"
# set -g @catppuccin_directory_text "#{b:pane_current_path}"
# set -g @catppuccin_meetings_text "#($HOME/.config/tmux/scripts/cal.sh)"
# # set -g @catppuccin_date_time_text "%H:%M"
# set -g @catppuccin_date_time_text "%Y-%m-%d %H:%M:%S"


# Configure Catppuccin
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_status_background "none"
set -g @catppuccin_window_status_style "none"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"

# Configure Online
set -g @online_icon "ok"
set -g @offline_icon "nok"

# status left look and feel
set -g status-left-length 100
set -g status-left ""
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_red},fg=#{@thm_bg},bold] ÓØà #S },#{#[bg=#{@thm_bg},fg=#{@thm_green}] ÓØà #S }}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]‚îÇ"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_maroon}] Ó™Ö #{pane_current_command} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]‚îÇ"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_blue}] Ó´∑ #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]#{?window_zoomed_flag,‚îÇ,}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_yellow}]#{?window_zoomed_flag, Ó≠ø zoom ,}"

# status right look and feel
set -g status-right-length 100
set -g status-right ""
set -ga status-right "#{?#{e|>=:10,#{battery_percentage}},#{#[bg=#{@thm_red},fg=#{@thm_bg}]},#{#[bg=#{@thm_bg},fg=#{@thm_pink}]}} #{battery_icon} #{battery_percentage} "
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]‚îÇ"
set -ga status-right "#[bg=#{@thm_bg}]#{?#{==:#{online_status},ok},#[fg=#{@thm_mauve}] Û∞ñ© on ,#[fg=#{@thm_red},bold]#[reverse] Û∞ñ™ off }"
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]‚îÇ"
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_blue}] Û∞≠¶ %Y-%m-%d Û∞Öê %H:%M "


# Configure Tmux
# set -g status-style "bg=#{@thm_bg}"

# Configure Catppuccin

# Plugin configuration
set -g @resurrect-capture-pane-contents 'on' # save pane contents
# set -g @catppuccin_status_background "default"
# session tmux
# floax
set -g @floax-bind 'H'
set -g @floax-width '90%'
set -g @floax-height '90%'
set -g @floax-border-color 'magenta'
set -g @floax-session-name 'floax'
# Initialize TMUX plugin managr (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


set -g status-justify "absolute-centre"

# pane border look and feel
setw -g pane-border-status top
# setw -g pane-border-status off
setw -g pane-border-format ""
# setw -g pane-active-border-style "bg=#{@thm_bg},fg=#{@thm_overlay_0}"
# setw -g pane-border-style "bg=#{@thm_bg},fg=#{@thm_surface_0}"
setw -g pane-border-lines single

# window look and feel
set -wg automatic-rename on
set -g automatic-rename-format "Window"

set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "bg=#{@thm_bg},fg=#{@thm_rosewater}"
set -g window-status-last-style "bg=#{@thm_bg},fg=#{@thm_peach}"
set -g window-status-activity-style "bg=#{@thm_red},fg=#{@thm_bg}"
set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"
set -gF window-status-separator "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}]‚îÇ"

set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"

set -g status-style "bg=default"
setw -g pane-active-border-style "bg=default,fg=#{@thm_overlay_0}"
setw -g pane-border-style "bg=default,fg=#{@thm_surface_0}"

# bind y split-window -v -c "#{pane_current_path}"
# bind v split-window -h -c "#{pane_current_path}"

# bind-key -r c command-prompt -p "window name:" "new-window; rename-window '%%'"
bind-key -r r command-prompt -p "window name" "rename-window '%%'"

